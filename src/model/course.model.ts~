import {Document, Schema, ObjectId, model} from "mongoose";


// course comment interface


interface IComment extends Document {
    // user: object;
    user: ObjectId;
    comment: string;
    commentsReplies?: IComment[]
}

//  review interface
interface IReview extends Document {
    // user: Object;
    user: ObjectId;
    rating: number;
    comment: string;
    commentsReplies: IComment[]
}


// link interface
interface ILink extends Document {
    title: string;
    url: string;
}


// course Data
interface ICourseData extends Document {
    title: string;
    videoUrl: string;
    videoDescription: string;
    videoLength: string;
    videoSection: string;
    videoPlayer: string;
    links: ILink[];
    suggestion: string;
    questions: IComment[]
}


// course interface
export interface ICourse extends Document {
    name: string;
    description: string;
    price: number;
    estimatedPrice?: number;
    thumbnail: { public_id: string, url: string };
    tags: string;
    level: string;
    demoUrl: string;
    benefits: { title: string }[];
    prerequisites: { title: string }[];
    reviews: IReview[];
    courseData: ICourseData[];
    rating?: number;
    purchased?: number;
}


//  review Schema
const reviewSchema = new Schema<IReview>({
    // user: Object,
    user: {
        type: Schema.Types.ObjectId,
        ref: "User"
    },
    rating: {
        type: Number,
        default: 0
    },
    comment: String,
})

// link Schema
const linkSchema = new Schema<ILink>({
    // title: String,
    // url: String,
    title: {
        type: String
    },
    url: {
        type: String
    }
})


//  comment Schema

const commentSchema = new Schema<IComment>({
    // user: Object,
    user: {
        type: Schema.Types.ObjectId,
        ref: "User"
    },
    // comment: String,
    comment: {
        type: String,
    },
    // commentsReplies: [Object]
    commentsReplies: [{
        type: Schema.Types.ObjectId,
        ref: "Comment"
    }]
})


// course Data Schema
const courseDataSchema = new Schema<ICourseData>({
    // title: String,
    title: {
        type: String,
        required: [true, "Course Title is required"]
    },
    // description: String,
    videoDescription: {
        type: String,
        required: [true, "Video Description is required"]
    },
    // videoUrl: String,
    videoUrl: {
        type: String,
        required: [true, "Video url is required"]
    },
    // videoThumbnail: Object,
    videoSection: {
        type: String,
        required: [true, "Video section is required"]
    },

    videoLength: String,
    videoPlayer: String,
    links: [linkSchema],
    suggestion: String,
    questions: [commentSchema]
})


// course Schema

const courseSchema = new Schema<ICourse>({
    name: {
        type: String,
        required: [true, "Course name is required"]
    },
    description: {
        type: String,
        required: [true, "Course description is required"]
    },
    price: {
        type: Number,
        required: [true, "Course price is required"]
    },
    estimatedPrice: {
        type: Number,
        default: 0
    },
    thumbnail: {
        public_id: {
            type: String,
            // required: [true, "Thumbnail public_id is required"]
        },
        url: {
            type: String,
            // required: [true, "Thumbnail url is required"]
        }
    },
    tags: {
        type: String,
        required: [true, "Course tags is required"]
    },
    level: {
        type: String,
        required: [true, "Course level is required"]
    },
    demoUrl: {
        type: String,
        required: [true, "Course demo url is required"]
    },
    // benefits: [{title: String}],
    benefits: [
        {
            title: {
                type: String,
                required: [true, "Course benefit title is required"]
            }
        }
    ],
    // prerequisites: [{title: String}],
    // prerequisites: [
    //     {
    //         title: {
    //             type: String,
    //             required: [true, "Course prerequisite title is required"]
    //         }
    //     }
    // ],
    reviews: [
        {
            type: reviewSchema,
            default: []
        }
    ],
    courseData: [courseDataSchema],
    rating: {
        type: Number,
        default: 0
    },
    purchased: {
        type: Number,
        default: 0
    }
})


export const Course = model<ICourse>("Course", courseSchema)



